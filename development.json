{"meta":{"version":"0.4.0","format":20,"date":1714025904762},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# SlashCtrl\n\n![Tests Status](https://github.com/orbitalbrain/slashctrl/actions/workflows/tests.yml/badge.svg)\n![NPM](https://img.shields.io/npm/l/slashctrl?label=License)\n![npm](https://img.shields.io/npm/v/slashctrl?label=Version)\n![Issues](https://img.shields.io/github/issues/orbitalbrain/slashctrl?label=Issues)\n![npm](https://img.shields.io/npm/dt/slashctrl?label=Downloads)\n[![Discord](https://img.shields.io/discord/1190566167589441606)](https://discord.gg/4g7sznXvXX)\n\n[![NPM](https://nodei.co/npm/slashctrl.png?downloads=true)](https://www.npmjs.com/package/slashctrl)  \n\n\nSlashCtrl is a package that makes it easier to create and manage slash commands with DiscordJS.\n\nJoin the discord: https://discord.gg/4g7sznXvXX\n\n## Features\n\n-   Easy to use\n-   Fast and reliable\n-   Integrated with DiscordJS\n\nSlashCtrl creates a simple framework to easily create and manage slash commands with DiscordJS, it also handles all the necessary checks for you, so you don't have to worry about that.\n\n## Installation\n\nTo install, simply run the following command:\n\n```bash\nnpm install slashctrl\n```\n or\n```bash\nyarn add slashctrl\n```\nor\n```bash\npnpm add slashctrl\n```\n\n## Usage\n\nFirst, you'll need to initialize the SlashCtrl class, like so:\n\n```js\nconst { SlashCtrl } = require('slashctrl');\n\nconst slashCtrl = new SlashCtrl({\n    token: 'your bot token',\n    applicationId: 'your bot application id'\n});\n```\n\nThen, you'll need to register your commands, you can use the `publishCommandsFromFolder` method to do so:\n\n```js\nslashCtrl.publishCommandsFromFolder(path.join(__dirname, 'commands'));\n```\n\nHere is an example of a command file\n\n```js\nexport default class ExampleCOmmand extends SlashCommand {\n\n    constructor() {\n        super();\n        this.setName(\"example\");\n        this.setDescription(\"This is an example command\");\n    }\n\n    async execute(interaction: CommandInteraction) {\n        return interaction.reply({ content: \"This is an example commands!\", ephemeral: true });\n    }\n\n}\n```\n\nSince the SlashCommand class extends DiscordJS's [SlashCommandBuilder](https://discord.js.org/docs/packages/builders/main/SlashCommandBuilder:Class), you can use all of its methods to build your command.\n\nFinally, SlashCtrl will need to know when to execute your commands, you can do so by using the `handleCommands` method in your InteractionCreate event, the package will take care of the rest and necessary checks:\n\n```js\nclient.on('interactionCreate', async interaction => {\n    slashCtrl.handleCommands(interaction);\n});\n```\n\nThat's it! You're all set up!\n\n**NOTE**: SlashCtrl is still being worked on with more features coming. Some features may not be fully implemented yet.\n","path":"README.md"}}}},"classes":[{"name":"ButtonUtils","construct":{"name":"constructor","returns":[[["ButtonUtils"]]]},"methods":[{"name":"createButton","scope":"static","params":[{"name":"buttonMetadata","optional":false,"type":[[["ButtonMetadata"]]]}],"returns":[[["ButtonBuilder"]]],"meta":{"line":6,"file":"ButtonUtils.ts","path":"utils"}},{"name":"decodeButtonCustomId","scope":"static","params":[{"name":"customId","optional":false,"type":[[["string"]]]}],"returns":[[["{"],["\ndata",": "],["string",","],["\ninteractionHandler",": "],["string\n","}"]]],"meta":{"line":20,"file":"ButtonUtils.ts","path":"utils"}},{"name":"encodeButtonCustomdId","scope":"static","params":[{"name":"interactionHandler","optional":false,"type":[[["string"]]]},{"name":"data","optional":true,"type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":13,"file":"ButtonUtils.ts","path":"utils"}}],"meta":{"line":4,"file":"ButtonUtils.ts","path":"utils"}},{"name":"SlashCommand","extends":["SlashCommandBuilder"],"construct":{"name":"constructor","returns":[[["SlashCommand"]]],"meta":{"line":21,"file":"SlashCommand.ts","path":"structures"}},"props":[{"name":"enabled","default":"true","type":[[["boolean"]]],"meta":{"line":16,"file":"SlashCommand.ts","path":"structures"}},{"name":"guilds","type":[[["Array","<"],["string",">"]]],"meta":{"line":11,"file":"SlashCommand.ts","path":"structures"}}],"methods":[{"name":"execute","params":[{"name":"interaction","optional":false,"type":[[["CommandInteraction","<"],["CacheType",">"]]]}],"returns":[[["Promise","<"],["unknown",">"]]],"meta":{"line":30,"file":"SlashCommand.ts","path":"structures"}}],"meta":{"line":6,"file":"SlashCommand.ts","path":"structures"}},{"name":"SlashCtrl","construct":{"name":"constructor","params":[{"name":"settings","optional":false,"type":[[["SlashCtrlSettings"]]]}],"returns":[[["SlashCtrl"]]],"meta":{"line":16,"file":"SlashCtrl.ts","path":"."}},"props":[{"name":"_applicationId","access":"private","readonly":true,"type":[[["string"]]],"meta":{"line":10,"file":"SlashCtrl.ts","path":"."}},{"name":"_commands","access":"private","type":[[["Collection","<"],["string",", "],["SlashCommand",">"]]],"meta":{"line":14,"file":"SlashCtrl.ts","path":"."}},{"name":"_token","access":"private","readonly":true,"type":[[["string"]]],"meta":{"line":12,"file":"SlashCtrl.ts","path":"."}}],"methods":[{"name":"executeCommand","access":"private","params":[{"name":"interaction","optional":false,"type":[[["CommandInteraction","<"],["CacheType",">"]]]}],"returns":[[["Promise","<"],["InteractionResponse","<"],["boolean",">>"]]],"meta":{"line":80,"file":"SlashCtrl.ts","path":"."}},{"name":"handleCommands","params":[{"name":"interaction","optional":false,"type":[[["BaseInteraction","<"],["CacheType",">"]]]}],"returns":[[["void"]]],"meta":{"line":68,"file":"SlashCtrl.ts","path":"."}},{"name":"publishCommands","params":[{"name":"commands","optional":false,"type":[[["Collection","<"],["string",", "],["SlashCommand",">"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":34,"file":"SlashCtrl.ts","path":"."}},{"name":"publishCommandsFromFolder","params":[{"name":"commandsPath","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":21,"file":"SlashCtrl.ts","path":"."}},{"name":"s","params":[{"name":"interaction","optional":false,"type":[[["BaseInteraction","<"],["CacheType",">"]]]}],"returns":[[["void"]]],"meta":{"line":74,"file":"SlashCtrl.ts","path":"."}}],"meta":{"line":7,"file":"SlashCtrl.ts","path":"."}}],"typedefs":[{"name":"ButtonMetadata","meta":{"line":15,"file":"types.ts","path":"types"},"props":[{"name":"data","optional":true,"type":[[["string"]]]},{"name":"interactionHandler","optional":false,"type":[[["string"]]]},{"name":"label","optional":false,"type":[[["string"]]]},{"name":"style","optional":false,"type":[[["ButtonStyle"]]]}]},{"name":"SlashCtrlSettings","meta":{"line":9,"file":"types.ts","path":"types"},"props":[{"name":"applicationId","optional":false,"type":[[["string"]]]},{"name":"handleInteractions","optional":true,"type":[[["boolean"]]]},{"name":"token","optional":false,"type":[[["string"]]]}]}]}